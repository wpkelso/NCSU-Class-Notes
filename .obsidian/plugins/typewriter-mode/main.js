var ce=Object.defineProperty;var ze=Object.getOwnPropertyDescriptor;var Ke=Object.getOwnPropertyNames;var je=Object.prototype.hasOwnProperty;var qe=(t,e)=>{for(var i in e)ce(t,i,{get:e[i],enumerable:!0})},_e=(t,e,i,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of Ke(e))!je.call(t,s)&&s!==i&&ce(t,s,{get:()=>e[s],enumerable:!(r=ze(e,s))||r.enumerable});return t};var Ge=t=>_e(ce({},"__esModule",{value:!0}),t);var et={};qe(et,{default:()=>Ze});module.exports=Ge(et);var ee={version:null,isAnnounceUpdatesEnabled:!0,isPluginActivated:!0,isDisableInCanvasEnabled:!1,isTypewriterScrollEnabled:!0,isOnlyActivateAfterFirstInteractionEnabled:!1,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:!1,isTypewriterOnlyUseCommandsEnabled:!1,typewriterOffset:.5,isKeepLinesAboveAndBelowEnabled:!1,linesAboveAndBelow:5,isMaxCharsPerLineEnabled:!1,maxCharsPerLine:64,isDimUnfocusedEnabled:!1,dimUnfocusedMode:"paragraphs",dimUnfocusedEditorsBehavior:"dim",dimmedOpacity:.25,isPauseDimUnfocusedWhileScrollingEnabled:!0,isPauseDimUnfocusedWhileSelectingEnabled:!0,isHighlightCurrentLineEnabled:!0,isHighlightCurrentLineOnlyInFocusedEditorEnabled:!1,currentLineHighlightStyle:"box",currentLineHighlightUnderlineThickness:1,"currentLineHighlightColor-dark":"#444","currentLineHighlightColor-light":"#ddd",doesWritingFocusShowHeader:!1,doesWritingFocusShowVignette:!0,isWritingFocusFullscreen:!0,writingFocusVignetteStyle:"box"};var b=require("obsidian");async function te(){return await(await fetch("https://raw.githubusercontent.com/davisriedel/obsidian-typewriter-mode/main/src/UpdateNotice.md")).text()}var v=class extends b.PluginSettingTab{plugin;constructor(e,i){super(e,i),this.plugin=i}display(){this.containerEl.empty(),this.containerEl.createEl("h2",{text:"Typewriter Mode Settings"}),this.containerEl.createEl("h3",{text:"General"});for(let e of Object.values(this.plugin.features.general))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Typewriter"}),this.plugin.settings.isKeepLinesAboveAndBelowEnabled&&this.containerEl.createEl("p",{text:'Not available if "keep lines above and below" is activated'});for(let e of Object.values(this.plugin.features.typewriter))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Keep Lines Above And Below"}),this.plugin.settings.isTypewriterScrollEnabled&&this.containerEl.createEl("p",{text:"Not available if typewriter scrolling is activated"});for(let e of Object.values(this.plugin.features.keepAboveAndBelow))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Highlight Current Line"});for(let e of Object.values(this.plugin.features.currentLine))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Dimming"});for(let e of Object.values(this.plugin.features.dimming))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Limit Line Width"});for(let e of Object.values(this.plugin.features.maxChar))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Writing Focus"});for(let e of Object.values(this.plugin.features.writingFocus))e.registerSetting(this);this.containerEl.createEl("h3",{text:"Updates and Info"});for(let e of Object.values(this.plugin.features.updates))e.registerSetting(this);te().then(e=>{let i=this.containerEl.createDiv();this.containerEl.appendChild(i),b.MarkdownRenderer.renderMarkdown(e,i,this.app.vault.getRoot().path,new b.Component)})}};var ue=require("@codemirror/state"),c=ue.Facet.define({combine:t=>t.length===0?ee:t[t.length-1]});var fe=require("@codemirror/state"),T=class{constructor(e){this.view=e;this.onLoad(),this.domResizeObserver=new ResizeObserver(this.onResize.bind(this)),this.domResizeObserver.observe(this.view.dom.ownerDocument.body)}domResizeObserver=null;_isDisabled=null;isDisabled(){let{isPluginActivated:e}=this.view.state.facet(c);if(!e)return!0;if(this._isDisabled==null){let{isDisableInCanvasEnabled:i}=this.view.state.facet(c);this._isDisabled=i&&this.view.dom.ownerDocument.querySelector(".canvas-wrapper")!=null}return this._isDisabled}userEventAllowed(e){let{isTypewriterOnlyUseCommandsEnabled:i}=this.view.state.facet(c),r=/^(select|input|delete|undo|redo)(\..+)?$/,s=/^(select.pointer)$/;return i&&(r=/^(input|delete|undo|redo)(\..+)?$/,s=/^(select)(\..+)?$/),r.test(e)&&!s.test(e)}inspectTransactions(e){let i=[],r=!1;for(let n of e.transactions){n.reconfigured&&(r=!0);let a=n.annotation(fe.Transaction.userEvent);a!==void 0&&i.push(a)}return i.length===0?{isReconfigured:r,isUserEvent:!1,allowedUserEvents:null}:{isReconfigured:!1,isUserEvent:!0,allowedUserEvents:i.reduce((n,a)=>n&&this.userEventAllowed(a),i.length>0)}}update(e){let{isReconfigured:i,isUserEvent:r,allowedUserEvents:s}=this.inspectTransactions(e);if(i&&this.onReconfigured(),!this.isDisabled()){if(!r){this.updateNonUserEvent();return}s?this.updateAllowedUserEvent():this.updateDisallowedUserEvent()}}onLoad(){}onReconfigured(){}updateAllowedUserEvent(){}updateDisallowedUserEvent(){}updateNonUserEvent(){}onResize(){}destroy(){var e;(e=this.domResizeObserver)==null||e.disconnect()}};var we=require("@codemirror/state"),S=we.Facet.define({combine:t=>t.length===0?{cssVariables:{},bodyAttrs:{},bodyClasses:[],persistentBodyClasses:[],allBodyClasses:[]}:t[t.length-1]});function h(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-editor, .mod-inside-iframe .cm-editor")}function E(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-scroller, .mod-inside-iframe .cm-scroller")}function ge(t){return t.dom.ownerDocument.querySelector(".workspace-leaf.mod-active .cm-sizer, .mod-inside-iframe .cm-sizer")}function be(t,e){var i;return parseFloat((i=t.contentDOM.querySelector(".cm-active.cm-line"))==null?void 0:i.getCssPropertyValue(e).replace("px",""))}function Je(t,e){let i=be(t,"font-size");return(e-i)/2}function ye(t){var s;let e=((s=t.coordsAtPos(t.state.selection.main.head))==null?void 0:s.top)??0,i=h(t);if(!i)return 0;let r=i.getBoundingClientRect().top;return e-r}function Qe(t){let e=h(t);if(!e)return 0;let i=t.state.facet(c).typewriterOffset;return e.clientHeight*i}function Xe(t){let e=be(t,"line-height"),i=Qe(t),r=ye(t),s=Je(t,e),{isTypewriterScrollEnabled:n,isKeepLinesAboveAndBelowEnabled:a,isOnlyMaintainTypewriterOffsetWhenReachedEnabled:g}=t.state.facet(c),m=h(t),u=E(t),l;if(!m||!u)l=0;else if(n)l=i,g&&(r<0?l=0:l=u.scrollTop+r<i?Math.min(i,r):i);else if(a){let{linesAboveAndBelow:p}=t.state.facet(c),Z=t.defaultLineHeight*p,he=m.clientHeight-t.defaultLineHeight*(p+1),$e=u.scrollTop!==0&&r<Z,Ne=r>he;$e?l=Z:Ne?l=he:l=r}else l=ye(t);return{typewriterOffset:i,scrollOffset:l,activeLineOffset:r,lineHeight:e,lineOffset:s}}function ie(t,e,i){t.requestMeasure({key:e,read:r=>Xe(r),write:(r,s)=>{window.requestAnimationFrame(()=>{i(r,s)})}})}var Ee=require("@codemirror/state"),re=require("@codemirror/view");var me=require("@codemirror/view");function ve(t,e,i){let r=!1;for(let s of e)if(t.slice(i+1-s.length,i+1)===s){r=!0;break}return r}function Te(t,e,i){let r=t.sentenceDelimiters.split(""),s=t.extraCharacters.split(""),n=t.ignoredPatterns.split(`
`),a=e.from,g=e.text,m=-1;for(let l=i-a-1;l>=0;l--)if(r.contains(g[l])){if(ve(g,n,l))continue;let p=1;for(;g[l+p]===" "&&p<i-a-1;)p+=1;for(;s.contains(g[l+p])&&r.contains(g[l+p-1])&&p<i-a-1;)p+=1;m=l+p;break}m===-1&&(m=0);let u=-1;for(let l=i-a;l<e.length;l++)if(r.contains(g[l])){if(ve(g,n,l))continue;let p=1;for(;r.contains(g[l+p])&&p<e.length;)p+=1;for(;s.contains(g[l+p])&&p<e.length;)p+=1;u=l+p;break}return u!==-1?{start:m+a,end:u+a}:{start:m+a,end:null}}function Se(t,e){let i=[],s=t.state.selection.main.from,n=t.state.doc.lineAt(s),a=Te(e,n,s);a.end==null&&s>n.from&&(a=Te(e,n,s-1));let g=a.start,m=a.end;m==null&&(m=n.to);function u(l,p,Z){i.push(me.Decoration.mark({inclusive:!0,attributes:{},class:Z}).range(l,p))}return g!==m&&(u(g,m,"active-sentence"),n.from!==g&&u(n.from,g,"active-paragraph"),m!==n.to&&u(m,n.to,"active-paragraph")),me.Decoration.set(i,!0)}var Ce=re.ViewPlugin.fromClass(class extends T{isInitialInteraction=!0;isRenderingAllowedUserEvent=!1;decorations=Ee.RangeSet.empty;onLoad(){super.onLoad(),window.addEventListener("moveByCommand",this.moveByCommand.bind(this)),this.watchEmbeddedMarkdown(),this.onReconfigured()}onReconfigured(){if(super.onReconfigured(),this.loadPerWindowProps(),this.isDisabled()){this.removeCurrentLineHighlight(),this.resetPadding(this.view);return}this.updateAfterExternalEvent()}watchEmbeddedMarkdown(){let t=".markdown-embed-content iframe.embed-iframe",e=this.view.state.facet(S);new MutationObserver(r=>{r.forEach(s=>{[].forEach.call(s.addedNodes,n=>{n.nodeType===Node.ELEMENT_NODE&&n.matches(t)&&this.loadPerWindowPropsOnElement(e,n.contentDocument.body)})})}).observe(this.view.dom.ownerDocument,{childList:!0,subtree:!0})}loadPerWindowPropsOnElement(t,e){for(let i of t.allBodyClasses)e.classList.remove(i);e.addClasses(t.persistentBodyClasses),this.isDisabled()||e.addClasses(t.bodyClasses),e.setCssProps(t.cssVariables),e.setAttrs(t.bodyAttrs)}getMarkdownBodies(){let t=this.view.dom.ownerDocument.querySelectorAll(".markdown-embed-content iframe.embed-iframe"),e=Array.from(t).map(i=>i.contentDocument.body);return[this.view.dom.ownerDocument.body,...e]}loadPerWindowProps(){let t=this.getMarkdownBodies(),e=this.view.state.facet(S);for(let i of t)this.loadPerWindowPropsOnElement(e,i)}removeCurrentLineHighlight(t=this.view){let e=h(t);if(!e)return;let i=e.querySelector(".ptm-current-line-highlight");i&&i.remove()}loadCurrentLineHighlight(t=this.view){let e=h(t);if(!e)return null;let i=e.querySelector(".ptm-current-line-highlight");if(!i){i=document.createElement("div");let r=t.state.facet(c);i.className=`ptm-current-line-highlight ptm-current-line-highlight-${r.currentLineHighlightStyle}`,e.appendChild(i)}return i}destroyCurrentLineHighlight(t=this.view){let e=h(t);if(!e)return;let i=e.querySelector(".ptm-current-line-highlight");i==null||i.remove()}setupWheelListener(){let t=E(this.view);t&&t.addEventListener("wheel",this.onWheel.bind(this))}updateAllowedUserEvent(){super.updateAllowedUserEvent(),this.applyDecorations();let t=h(this.view);t&&(t.classList.remove("ptm-wheel"),t.classList.remove("ptm-select"),this.isInitialInteraction&&(t.classList.remove("ptm-first-open"),this.isInitialInteraction=!1)),this.isRenderingAllowedUserEvent=!0,ie(this.view,"TypewriterModeUpdateAfterUserEvent",(e,i)=>{this.recenterAndMoveCurrentLineHighlight(i,e),this.isRenderingAllowedUserEvent=!1})}updateDisallowedUserEvent(){if(this.isRenderingAllowedUserEvent)return;super.updateDisallowedUserEvent();let t=h(this.view);t&&(this.isInitialInteraction&&(t.classList.remove("ptm-first-open"),this.isInitialInteraction=!1),t.classList.add("ptm-select")),ie(this.view,"TypewriterModeUpdateAfterUserEvent",({activeLineOffset:e,lineHeight:i,lineOffset:r},s)=>{let{isHighlightCurrentLineEnabled:n}=s.state.facet(c);n&&this.moveCurrentLineHighlight(s,e,i,r)})}updateNonUserEvent(){if(super.updateNonUserEvent(),this.applyDecorations(),!this.isInitialInteraction)return;let{isOnlyActivateAfterFirstInteractionEnabled:t}=this.view.state.facet(c);if(t){let e=h(this.view);e&&e.classList.add("ptm-first-open")}}moveByCommand(){let t=h(this.view);t&&t.classList.remove("ptm-select"),this.updateAllowedUserEvent()}onResize(){this.isDisabled()||(super.onResize(),this.updateAfterExternalEvent())}onWheel(){let t=h(this.view);t&&t.classList.add("ptm-wheel")}destroy(){super.destroy(),this.destroyCurrentLineHighlight();let t=E(this.view);t&&t.removeEventListener("wheel",this.onWheel),window.removeEventListener("moveByCommand",this.moveByCommand.bind(this))}applyDecorations(){let{isDimUnfocusedEnabled:t,dimUnfocusedMode:e}=this.view.state.facet(c);!t||e!=="sentences"||(this.decorations=Se(this.view,{sentenceDelimiters:".!?",extraCharacters:"*\u201C\u201D\u2018\u2019",ignoredPatterns:"Mr."}))}updateAfterExternalEvent(){this.applyDecorations();let{isTypewriterScrollEnabled:t}=this.view.state.facet(c);ie(this.view,"TypewriterModeUpdateAfterExternalEvent",(e,i)=>{this.setupWheelListener(),t&&this.setPadding(i,e.typewriterOffset),this.recenterAndMoveCurrentLineHighlight(i,e)})}moveCurrentLineHighlight(t,e,i,r){let s=this.loadCurrentLineHighlight(t);s&&(s.style.height=`${i}px`,s.style.top=`${e-r}px`)}setPadding(t,e){let{isOnlyMaintainTypewriterOffsetWhenReachedEnabled:i}=t.state.facet(c),r=ge(t);r&&(r.style.padding=i?`0 0 ${e}px 0`:`${e}px 0`)}resetPadding(t){let e=ge(t);e&&(e.style.padding="var(--file-margins)")}recenter(t,e){let i=t.state.selection.main.head,r=re.EditorView.scrollIntoView(i,{y:"start",yMargin:e}),s=t.state.update({effects:r});t.dispatch(s)}recenterAndMoveCurrentLineHighlight(t,{scrollOffset:e,lineHeight:i,lineOffset:r}){let{isTypewriterScrollEnabled:s,isKeepLinesAboveAndBelowEnabled:n,isHighlightCurrentLineEnabled:a}=t.state.facet(c);(s||n)&&this.recenter(t,e),a&&this.moveCurrentLineHighlight(t,e,i,r)}},{decorations:t=>t.decorations});var Re=require("obsidian");var Me=require("obsidian"),oe=require("obsidian");async function Ye(t,e,i){let r=await fetch(`https://api.github.com/repos/${t}/${e}/releases`),s=await r.json();if(!r.ok&&"message"in s||!Array.isArray(s))throw new Error(`Failed to fetch releases: ${s.message??"Unknown error"}`);if(i==null)return s.filter(a=>!a.draft&&!a.prerelease);let n=s.findIndex(a=>a.tag_name===i);if(n===-1)throw new Error(`Could not find release with tag ${i}`);return s.slice(0,n).filter(a=>!a.draft&&!a.prerelease)}var se=class extends oe.Modal{releases;updateNotice;constructor(e){super(app),Ye("davisriedel","obsidian-typewriter-mode",e).then(i=>{if(this.releases=i,this.releases.length===0){this.close();return}te().then(r=>{this.updateNotice=r,this.display()}).catch(r=>{console.log(`Failed to fetch update notice: ${r}`),this.close()})}).catch(i=>{console.log(`Failed to fetch release notes: ${i}`),this.close()})}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h1",{text:"Fetching release notes..."})}onClose(){let{contentEl:e}=this;e.empty()}display(){let{contentEl:e}=this;e.empty(),e.classList.add("ptm-update-modal-container");let i=e.createDiv("ptm-update-modal"),r=this.releases.map(n=>`### ${n.tag_name}

${n.body}`).join(`
---
`),s=`# Typewriter Mode updated to v${this.releases[0].tag_name}

${this.updateNotice}

## What's new?

Here's what's new since the last version you had installed:

---

${r}`;oe.MarkdownRenderer.renderMarkdown(s,i,app.vault.getRoot().path,new Me.Component)}};var w=class{constructor(e){this.plugin=e}load(){}};var d=class extends w{enable(){}disable(){}};var xe=require("obsidian"),o=class extends d{toggleClass=null;isToggleClassPersistent=!1;commandTitle;isSettingEnabled(){return!0}getToggleClass(){return this.toggleClass}registerCommand(){this.hasCommand&&this.plugin.addCommand({id:this.setting,name:this.commandTitle,callback:this.toggle.bind(this)})}registerSetting(e){new xe.Setting(e.containerEl).setName(this.settingTitle).setDesc(this.settingDesc).setClass("typewriter-mode-setting").addToggle(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.toggle(r),e.display()})).setDisabled(!this.isSettingEnabled())}load(){this.registerCommand(),this.plugin.settings[this.setting]?this.enable():this.disable()}toggle(e=null){let i=e;i===null&&(i=!this.plugin.settings[this.setting]),this.plugin.settings={...this.plugin.settings,[this.setting]:i},i?this.enable():this.disable(),this.plugin.saveSettings().then()}enable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].contains(this.toggleClass)||this.plugin.perWindowProps[e].push(this.toggleClass)}}disable(){if(this.toggleClass){let e=this.isToggleClassPersistent?"persistentBodyClasses":"bodyClasses";this.plugin.perWindowProps[e].remove(this.toggleClass)}}};function De(t){return t.charAt(0).toUpperCase()+t.slice(1)}var ne=class extends w{load(){for(let e of["up","down"])this.plugin.addCommand({id:`move-typewriter-${e}`,name:`Move typewriter ${e}`,hotkeys:[{modifiers:["Mod"],key:e==="up"?"ArrowUp":"ArrowDown"}],editorCallback:(i,r)=>this.onCommand(i,e)})}onCommand(e,i){e.exec(`go${De(i)}`),window.dispatchEvent(new Event("moveByCommand"))}};var f=class extends w{registerCommand(){this.plugin.addCommand({id:this.commandKey,name:this.commandTitle,callback:this.onCommand.bind(this)})}load(){this.registerCommand()}};var ae=class extends f{commandKey="typewriter-scrolling-and-paragraph-dimming";commandTitle="Toggle typewriter scrolling and paragraph dimming";onCommand(){let{isTypewriterScrollEnabled:e,isDimUnfocusedEnabled:i}=this.plugin.settings,r=e&&i;this.plugin.features.typewriter.TypewriterScroll.toggle(!r),this.plugin.features.dimming.DimUnfocused.toggle(!r)}};var le=class extends f{commandKey="writing-focus";commandTitle="Toggle writing focus";focusModeActive=!1;maximizedClass="ptm-maximized";focusModeClass="ptm-focus-mode";hideHeaderClass="ptm-writing-focus-no-header";vignetteElClass="ptm-writing-focus-vignette-element";vignetteStyleAttr="data-ptm-writing-focus-vignette-style";leftSplitCollapsed;rightSplitCollapsed;onCommand(){this.toggleFocusMode()}addVignette(e){let i=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;i.classList.add(this.vignetteElClass),i.setAttr(this.vignetteStyleAttr,this.plugin.settings.writingFocusVignetteStyle)}removeVignette(e){let i=this.plugin.settings.doesWritingFocusShowHeader?e.containerEl:e.contentEl;i.removeAttribute(this.vignetteStyleAttr),i.classList.remove(this.vignetteElClass)}startFullscreen(){document.body.requestFullscreen()}exitFullscreen(){document.exitFullscreen().then()}onExitFullscreenWritingFocus(e){this.focusModeActive&&this.disableFocusMode(e)}storeSplitsValues(){this.leftSplitCollapsed=this.plugin.app.workspace.leftSplit.collapsed,this.rightSplitCollapsed=this.plugin.app.workspace.rightSplit.collapsed}collapseSplits(){this.plugin.app.workspace.leftSplit.collapse(),this.plugin.app.workspace.rightSplit.collapse()}restoreSplits(){this.leftSplitCollapsed||this.plugin.app.workspace.leftSplit.expand(),this.rightSplitCollapsed||this.plugin.app.workspace.rightSplit.expand()}removeExtraneousClasses(){this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)&&this.plugin.app.workspace.containerEl.removeClass(this.maximizedClass),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),document.body.classList.contains(this.hideHeaderClass)&&document.body.classList.remove(this.hideHeaderClass)}enableFocusMode(e){this.focusModeActive=!0,document.body.classList.contains(this.focusModeClass)||this.storeSplitsValues(),this.collapseSplits(),this.plugin.app.workspace.containerEl.toggleClass(this.maximizedClass,!this.plugin.app.workspace.containerEl.hasClass(this.maximizedClass)),document.body.classList.toggle(this.focusModeClass,!document.body.classList.contains(this.focusModeClass)),this.plugin.settings.doesWritingFocusShowHeader||document.body.classList.toggle(this.hideHeaderClass,!document.body.classList.contains(this.hideHeaderClass)),document.body.classList.contains(this.focusModeClass)&&Array.from(document.querySelectorAll(`.${this.focusModeClass} .workspace-split`)).forEach(i=>{let r=i;r.querySelector(".mod-active")?r.style.display="flex":r.style.display="none"}),this.plugin.settings.doesWritingFocusShowVignette&&this.addVignette(e),this.plugin.settings.isWritingFocusFullscreen&&this.startFullscreen()}disableFocusMode(e){this.removeExtraneousClasses(),document.body.classList.contains(this.focusModeClass)&&document.body.classList.remove(this.focusModeClass),this.restoreSplits(),Array.from(document.querySelectorAll(".workspace-split")).forEach(i=>{let r=i;r.style.display="flex"}),this.plugin.settings.doesWritingFocusShowVignette&&this.removeVignette(e),this.plugin.settings.isWritingFocusFullscreen&&this.exitFullscreen(),this.focusModeActive=!1}toggleFocusMode(){this.plugin.settings.isWritingFocusFullscreen&&(document.body.onfullscreenchange=()=>{document.fullscreenElement||this.onExitFullscreenWritingFocus(i)});let i=this.plugin.app.workspace.activeLeaf.view;i.getViewType()!=="empty"&&(this.focusModeActive?this.disableFocusMode(i):this.enableFocusMode(i))}async onload(){this.plugin.addRibbonIcon("enter","Toggle Writing Focus",e=>{this.toggleFocusMode()})}};var de=class extends f{commandKey="toggle-dimming";commandTitle="Toggle dimming";onCommand(){this.plugin.features.dimming.DimUnfocused.toggle()}};var pe=class extends f{commandKey="toggle-typewriter";commandTitle="Toggle typewriter scrolling";onCommand(){let{isTypewriterScrollEnabled:e}=this.plugin.settings;this.plugin.features.typewriter.TypewriterScroll.toggle(!e)}};function Le(t){return[new pe(t),new de(t),new ae(t),new ne(t),new le(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{})}var Pe=require("obsidian"),y=class extends d{setting;themeMode;constructor(e,i){super(e),this.themeMode=i,this.setting=`currentLineHighlightColor-${i}`}registerSetting(e){new Pe.Setting(e.containerEl).setName(`Current line highlight color in ${this.themeMode} themes`).setDesc(`The color of the current line highlight in ${this.themeMode} themes`).setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings[this.setting]).onChange(r=>{this.changeCurrentLineHighlightColor(r)}))}load(){this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${this.plugin.settings[this.setting]}`)}changeCurrentLineHighlightColor(e){this.plugin.settings[this.setting]=e,this.plugin.setCSSVariable(`--current-line-highlight-color-${this.themeMode}`,`${e}`),this.plugin.saveSettings().then()}};var C=class extends y{constructor(e){super(e,"dark")}};var M=class extends y{constructor(e){super(e,"light")}};var Ae=require("obsidian"),x=class extends d{setting="currentLineHighlightStyle";registerSetting(e){new Ae.Setting(e.containerEl).setName("Current line highlight style").setDesc("The style of the current line highlight").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("underline","Underline").setValue(this.plugin.settings.currentLineHighlightStyle).onChange(r=>{this.changeCurrentLineHighlightStyle(r),e.display()}))}changeCurrentLineHighlightStyle(e){this.plugin.settings.currentLineHighlightStyle=e,this.plugin.saveSettings().then()}};var Fe=require("obsidian"),D=class extends d{setting="currentLineHighlightUnderlineThickness";registerSetting(e){new Fe.Setting(e.containerEl).setName("Current line underline thickness").setDesc("The thickness of the underline that highlights the current line").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(1,5,1).setDynamicTooltip().setValue(this.plugin.settings.currentLineHighlightUnderlineThickness).onChange(r=>{this.changeCurrentLineHighlightUnderlineThickness(r)}))}load(){this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${this.plugin.settings.currentLineHighlightUnderlineThickness}px`)}changeCurrentLineHighlightUnderlineThickness(e){this.plugin.settings.currentLineHighlightUnderlineThickness=e,this.plugin.setCSSVariable("--current-line-highlight-underline-thickness",`${e}px`),this.plugin.saveSettings()}};var L=class extends o{setting="isDimUnfocusedEnabled";toggleClass="ptm-dim-unfocused";hasCommand=!0;commandTitle="Toggle dimming";settingTitle="Dim unfocused";settingDesc="Dim unfocused paragraphs / sentences"};var ke=require("obsidian"),P=class extends d{setting="dimUnfocusedEditorsBehavior";registerSetting(e){new ke.Setting(e.containerEl).setName("Dimming behavior in unfocused notes").setDesc("How to dim paragraphs / sentences in notes / editors that your cursor is not on (e.g. if you have multiple notes open in split panes)").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("dim-none","Do not dim anything").addOption("dim","Dim all but the previously focused paragraph / sentence").addOption("dim-all","Dim everything").setValue(this.plugin.settings.dimUnfocusedEditorsBehavior).onChange(r=>{this.changeDimUnfocusedEditorsBehavior(r),e.display()}))}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=this.plugin.settings.dimUnfocusedEditorsBehavior}changeDimUnfocusedEditorsBehavior(e){this.plugin.settings.dimUnfocusedEditorsBehavior=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-editors-behavior"]=e,this.plugin.saveSettings().then()}};var Oe=require("obsidian"),A=class extends d{setting="dimmedOpacity";registerSetting(e){new Oe.Setting(e.containerEl).setName("Opacity of dimmed elements").setDesc("The opacity of dimmed elements").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.dimmedOpacity*100).onChange(r=>{this.changeDimmedOpacity(r/100)}))}load(){this.plugin.setCSSVariable("--dimmed-opacity",`${this.plugin.settings.dimmedOpacity}`)}changeDimmedOpacity(e=.25){this.plugin.settings.dimmedOpacity=e,this.plugin.setCSSVariable("--dimmed-opacity",`${e}`),this.plugin.saveSettings()}};var F=class extends o{setting="isHighlightCurrentLineEnabled";toggleClass="ptm-highlight-current-line";hasCommand=!0;commandTitle="Toggle highlight current line";settingTitle="Highlight current line";settingDesc="Highlights the line that the cursor is currently on"};var k=class extends o{setting="isHighlightCurrentLineOnlyInFocusedEditorEnabled";toggleClass="ptm-highlight-current-line-only-in-active-editor";hasCommand=!1;settingTitle="Highlight current line only in focused note";settingDesc="Only show highlighted line in the note your cursor is on (e.g. if you have multiple notes open in split panes)"};var O=class extends o{setting="isKeepLinesAboveAndBelowEnabled";hasCommand=!0;commandTitle="Toggle keeping lines above and below";settingTitle="Keep lines above and below";settingDesc="When enabled, always keeps the specified amount of lines above and below the current line in view";isSettingEnabled(){return!this.plugin.settings.isTypewriterScrollEnabled}};var U=class extends o{setting="isMaxCharsPerLineEnabled";toggleClass="ptm-max-chars-per-line";isToggleClassPersistent=!0;hasCommand=!0;commandTitle="Toggle maximum number of characters per line";settingTitle="Limit maximum number of characters per line";settingDesc="Limits the maximum number of characters per line"};var Ue=require("obsidian"),H=class extends d{setting="linesAboveAndBelow";registerSetting(e){new Ue.Setting(e.containerEl).setName("Amount of lines above and below the current line").setDesc("The amount of lines to always keep above and below the current line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.linesAboveAndBelow.toString()).onChange(r=>{this.changeAmountOfLinesAboveAndBelow(parseInt(r))}))}changeAmountOfLinesAboveAndBelow(e){this.plugin.settings.linesAboveAndBelow=e,this.plugin.saveSettings().then()}};var He=require("obsidian"),V=class extends d{setting="maxCharsPerLine";registerSetting(e){new He.Setting(e.containerEl).setName("Maximum number of characters per line").setDesc("The maximum number of characters per line").setClass("typewriter-mode-setting").addText(i=>i.setValue(this.plugin.settings.maxCharsPerLine.toString()).onChange(r=>{this.changeMaxCharsPerLine(parseInt(r))}))}load(){this.plugin.setCSSVariable("--max-chars-per-line",`${this.plugin.settings.maxCharsPerLine}ch`)}changeMaxCharsPerLine(e){this.plugin.settings.maxCharsPerLine=e,this.plugin.setCSSVariable("--max-chars-per-line",`${e}ch`),this.plugin.saveSettings()}};var W=class extends o{setting="isOnlyActivateAfterFirstInteractionEnabled";hasCommand=!1;settingTitle="Only activate after first interaction";settingDesc="Activate the focused line highlight and paragraph dimming only after the first interaction with the editor"};var B=class extends o{setting="isOnlyMaintainTypewriterOffsetWhenReachedEnabled";hasCommand=!1;settingTitle="Only maintain typewriter offset when reached";settingDesc="The line that the cursor is on will not be scrolled to the center of the editor until it the specified typewriter offset is reached. This removes the additional space at the top of the editor."};var I=class extends o{setting="isPauseDimUnfocusedWhileScrollingEnabled";toggleClass="ptm-dim-unfocused-pause-while-scrolling";hasCommand=!1;settingTitle="Pause dimming while scrolling";settingDesc="If this is enabled, paragraphs / sentences are not dimmed while scrolling"};var R=class extends o{setting="isPauseDimUnfocusedWhileSelectingEnabled";toggleClass="ptm-dim-unfocused-pause-while-selecting";hasCommand=!1;settingTitle="Pause dimming while selecting text";settingDesc="If this is enabled, paragraphs / sentences are not dimmed while selecting text"};var Ve=require("obsidian"),$=class extends d{setting="typewriterOffset";registerSetting(e){new Ve.Setting(e.containerEl).setName("Typewriter offset").setDesc("Positions the typewriter line at the specified percentage of the screen").setClass("typewriter-mode-setting").addSlider(i=>i.setLimits(0,100,5).setDynamicTooltip().setValue(this.plugin.settings.typewriterOffset*100).onChange(r=>{this.changeTypewriterOffset(r/100)}))}changeTypewriterOffset(e){this.plugin.settings.typewriterOffset=e,this.plugin.saveSettings().then()}};var N=class extends o{setting="isTypewriterOnlyUseCommandsEnabled";toggleClass="ptm-typewriter-only-use-commands";hasCommand=!1;settingTitle="Do not snap typewriter with arrow keys";settingDesc="The typewriter will only snap when using this plugin's move commands. It will not snap when using the arrow keys. The move commands are by default Cmd/Ctrl+ArrowUp/ArrowDown, but you can assign your own hotkeys for the move commands in Obsidian's settings."};var z=class extends o{setting="isTypewriterScrollEnabled";toggleClass="ptm-typewriter-scroll";hasCommand=!0;commandTitle="Toggle typewriter scrolling";settingTitle="Typewriter scrolling";settingDesc="Turns typewriter scrolling on or off";isSettingEnabled(){return!this.plugin.settings.isKeepLinesAboveAndBelowEnabled}};var K=class extends o{setting="doesWritingFocusShowHeader";hasCommand=!1;settingTitle="Show header in writing focus";settingDesc="If enabled, the header will be shown in writing focus"};var j=class extends o{setting="doesWritingFocusShowVignette";hasCommand=!1;settingTitle="Writing focus vignette";settingDesc="Add a vignette to the edges of the screen in writing focus"};var We=require("obsidian"),q=class extends d{setting="writingFocusVignetteStyle";registerSetting(e){new We.Setting(e.containerEl).setName("Writing focus vignette style").setDesc("The style of the vignette in writing focus mode").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("box","Box").addOption("column","Column").setValue(this.plugin.settings.writingFocusVignetteStyle).onChange(r=>{this.changeVignetteStyle(r),e.display()}))}changeVignetteStyle(e){this.plugin.settings.writingFocusVignetteStyle=e,this.plugin.saveSettings().then()}};var _=class extends o{setting="isAnnounceUpdatesEnabled";toggleClass="ptm-announce-updates";hasCommand=!1;settingTitle="Announce updates";settingDesc="If enabled you will get a notice with release notes whenever you install a new version of Typewriter Mode"};var Be=require("obsidian");var G=class extends d{setting="dimUnfocusedMode";registerSetting(e){new Be.Setting(e.containerEl).setName("Dim unfocused mode").setDesc("Choose to dim unfocused paragraphs or sentences").setClass("typewriter-mode-setting").addDropdown(i=>i.addOption("paragraphs","Paragraphs").addOption("sentences","Sentences").setValue(this.plugin.settings.dimUnfocusedMode).onChange(r=>{this.change(r),e.display()}))}load(){super.load(),this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-mode"]=this.plugin.settings.dimUnfocusedMode}change(e){this.plugin.settings.dimUnfocusedMode=e,this.plugin.perWindowProps.bodyAttrs["data-ptm-dim-unfocused-mode"]=this.plugin.settings.dimUnfocusedMode,this.plugin.saveSettings().then()}};var J=class extends o{setting="isDisableInCanvasEnabled";toggleClass="ptm-is-disabled-in-canvas";hasCommand=!1;settingTitle="Disable the plugin in canvas";settingDesc="This will disable the plugin completely in canvas"};var Q=class extends o{setting="isPluginActivated";toggleClass="ptm-plugin-activated";hasCommand=!0;commandTitle="Toggle on / off";settingTitle="Activate Typewriter Mode";settingDesc="This enables or disables all the features below."};var X=class extends o{setting="isWritingFocusFullscreen";hasCommand=!1;settingTitle="Make Obsidian fullscreen in writing focus";settingDesc="If enabled, the Obsidian window will toggle to fullscreen when entering writing focus"};function Ie(t){return{maxChar:[new U(t),new V(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),writingFocus:[new K(t),new X(t),new j(t),new q(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),general:[new Q(t),new J(t),new W(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),typewriter:[new z(t),new $(t),new B(t),new N(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),keepAboveAndBelow:[new O(t),new H(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),currentLine:[new F(t),new M(t),new C(t),new x(t),new D(t),new k(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),dimming:[new L(t),new G(t),new A(t),new I(t),new R(t),new P(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{}),updates:[new _(t)].reduce((e,i)=>({...e,[i.constructor.name]:i}),{})}}var Y=class extends Re.Plugin{settings;perWindowProps={cssVariables:{},bodyClasses:[],bodyAttrs:{},allBodyClasses:[],persistentBodyClasses:[]};editorExtensions=[Ce,[]];features=Ie(this);commands=Le(this);async onload(){let e=await this.loadData();this.settings=Object.assign(ee,e),this.perWindowProps.allBodyClasses=[];for(let i of Object.values(this.features))for(let r of Object.values(i))if(r.load(),r instanceof o){let s=r.getToggleClass();s&&this.perWindowProps.allBodyClasses.push(s)}for(let i of Object.values(this.commands))i.load();this.addSettingTab(new v(this.app,this)),this.updateFacets(),this.registerEditorExtension(this.editorExtensions),this.announceUpdate()}onunload(){for(let e of Object.values(this.features))for(let i of Object.values(e))i.disable()}updateFacets(){this.editorExtensions[1]=[c.of(this.settings),S.of(this.perWindowProps)]}async saveSettings(){await this.saveData(this.settings),this.updateFacets(),this.app.workspace.updateOptions()}setCSSVariable(e,i){this.perWindowProps.cssVariables[e]=i}announceUpdate(){let e=this.manifest.version,i=this.settings.version;if(e===i||(this.settings.version=e,this.saveSettings().then(),this.settings.isAnnounceUpdatesEnabled===!1))return;new se(i).open()}};var Ze=Y;
